on:
  push:
    branches: [ main ]
  pull_request:

name: CI

jobs:

  test:
    name: Cargo test (${{ matrix.os }})
    runs-on: ${{ matrix. os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release --verbose --examples
    - name: Test
      run: cargo test --release
  
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check  # Also fmt subdirectories

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all -- -D warnings
  
  R-CMD-check:

    name: R CMD check (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
         os: ['ubuntu-latest', 'macos-latest', 'windows-latest']

    steps:

      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: 'release'
          use-public-rspm: true

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 'stable'

      - name: Install dependencies
        run: |
          install.packages(c("R6", "testthat", "rcmdcheck"), repos="http://cran.us.r-project.org")
        shell: Rscript {0}

      - name: Run R CMD build (non-windows)
        if: matrix.os != 'windows-latest'
        run: |
          _R_CHECK_CRAN_INCOMING=false R CMD build ./changeforest-r --no-manual

      - name: Run R CMD build (windows)
        if: matrix.os == 'windows-latest'
        run: |
          R.exe CMD build ./changeforest-r --no-manual     
      
      - uses: actions/upload-artifact@v2
        with:
          name: r-builds
          path: "changeforest_*.tar.gz"


  python-tests:
    name: Python tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 'stable'
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Build wheel
        run: |
          pip install --upgrade maturin
          maturin build --release -m changeforest-py/Cargo.toml
      - name: Install wheel
        run: pip install --force-reinstall --no-index --find-links changeforest-py/target/wheels/ changeforest
      - name: Run tests
        run: |
          pip install pytest numpy
          pytest changeforest-py/tests
