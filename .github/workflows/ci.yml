on:
  push:
    branches: [ main ]
  pull_request:

name: CI

jobs:

  test:
    name: Cargo test (${{ matrix.os }})
    runs-on: ${{ matrix. os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release --verbose --examples
    - name: Test
      run: cargo test --release
  
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check  # Also fmt subdirectories

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all -- -D warnings
  
  R-CMD-check:
    strategy:
      fail-fast: false
      matrix:
         R: ['release']
         os: ['ubuntu-latest', 'windows-latest', 'macos-latest']

    runs-on: ${{ matrix.os }}
    name: R CMD check (${{ matrix.R }}, ${{ matrix.os }})
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.R }}
          use-public-rspm: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 'stable'
      - name: Install dependencies
        run: |
          install.packages(c("R6", "testthat"), repos="http://cran.us.r-project.org")
        shell: Rscript {0}
      - name: Run R CMD check
        run: |
          _R_CHECK_CRAN_INCOMING_=false R CMD check --as-cran --no-vignettes --no-manual ./changeforest-r
      - name: Check for warnings
          CHECK_LOG_FILE=changeforest-r.Rcheck/00check.log
          CHECK_INSTALL_FILE=changeforest-r.Rcheck/00install.out
          if ! [[ -f "$CHECK_LOG_FILE" ]]; then
            echo "Log-file not found."
            exit 1
          fi
          if cat $CHECK_LOG_FILE | grep -q "ERROR"; then
            cat $CHECK_INSTALL_FILE
            cat $CHECK_LOG_FILE
            exit 1
          fi
          if cat $CHECK_LOG_FILE | grep -q "WARNING"; then
            echo "Found warnings, treated as errors."
            cat $CHECK_LOG_FILE
            exit 1
          fi
        # e: pipefail
        # x: print commands
        # u: unset variables are errors
        # l: as login script
        shell: bash -lxu {0}
        if: matrix.os != 'windows-latest'


  python-tests:
    name: Python tests
    runs-on: ubuntu-latest
    container: condaforge/mambaforge

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 'stable'
      - name: Install dependencies
        run: |
          apt-get update -y
          apt-get install -y build-essential
          cd changeforest-py
          mamba env create -f environment.yml
          source activate changeforest
          maturin develop
          pytest tests
        shell: bash -lxeu {0}
