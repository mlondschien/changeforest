on:
  push:
    branches: [ main ]
  pull_request:

name: Continuous integration

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
  
  R-CMD-check:
    name: R CMD check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-pandoc@v1
      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: 'release'
          use-public-rspm: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 'stable'
      - name: Install rextendr
        run: |
          install.packages("rextendr", repos="http://cran.us.r-project.org")
          install.packages("testthat", repos="http://cran.us.r-project.org")
        shell: Rscript {0}
      - name: Run R CMD check
        run: |
          _R_CHECK_CRAN_INCOMING_=false R CMD check --as-cran --no-vignettes --no-manual ./hdcd-r
          FILE=hdcd-r.Rcheck/00check.log
          if ! [[ -f "$FILE" ]]; then
            echo "Log-file not found."
            exit 1
          fi
          if cat $(FILE) | grep -q "WARNING"; then
            echo "Found warnings, treated as errors."
            exit 1
          fi
        shell: bash -l {0}

  python-tests:
    name: Python tests
    runs-on: ubuntu-latest
    container: condaforge/mambaforge

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 'stable'
      - name: Install dependencies
        run: |
          apt-get update -y
          apt-get install -y build-essential
          cd hdcd-python
          mamba env create -f environment.yml
          source activate hdcd
          maturin develop
          pytest tests
        shell: bash -lxeu {0}
