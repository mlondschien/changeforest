on:
  pull_request:
  release:
    types:
      - published

name: Build

jobs:
  # Mostly taken from https://github.com/etesync/etebase-py/blob/ee7bf21e9f57f0ce37f08d1f5cefd8ef0d3bb2f7/.github/workflows/manual.yml
  # and https://github.com/Daggy1234/polaroid/blob/ace9a6eee74ee9c30edd0d350d65e2f3b4d8430c/.github/workflows/publish.yml
  python-build-wheels:
    name: Python wheels (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:  # https://cibuildwheel.readthedocs.io/en/stable/options/#archs

          - vers: i686
            os: ubuntu-20.04
          - vers: aarch64
            os: ubuntu-20.04
          - vers: x86
            os: ubuntu-20.04

          - vers: arm64
            os: macos-10.15
          - vers: x86_64
            os: macos-10.15
          - vers: universal2
            os: macos-10.15

          - vers: AMD64
            os: windows-2019
          - vers: x86
            os: windows-2019
      
    env:
      # Install rust in container before building wheels.
      CIBW_BEFORE_ALL_LINUX: "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y && yum install -y openssl-devel"
      # See https://github.com/pypa/pip/issues/7555 for PIP_USE_FEATURE=in-tree-build.
      # This enables relative paths, e.g. in the Cargo.toml.
      CIBW_ENVIRONMENT: 'PATH="$PATH:$HOME/.cargo/bin" PIP_USE_FEATURE="in-tree-build"'
      # Python 3.6 build are slooow
      # win32 raise error: your Rust target architecture (64-bit) does not match your python interpreter (32-bit)
      # pypi builds on macos require compilation of numpy (why?) and are thus super slow
      # fail due to https://github.com/numpy/numpy/issues/15947.   
      # Tests fail for 32bit linux. Possibly something to do with RNG?
      CIBW_SKIP: "cp36-* pp*-macosx* *pp"
      CIBW_TEST_REQUIRES: "pytest numpy"
      CIBW_TEST_COMMAND: "pytest {project}/changeforest-py/tests"

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: wheels Linux ${{ matrix.vers }}
        if: runner.os == 'Linux'
        uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_ARCHS_LINUX: ${{ matrix.vers }}
        with:
          package-dir: changeforest-py

      - name: wheels Macos ${{ matrix.vers }}
        if: runner.os == 'Macos'
        uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_ARCHS_MACOS: ${{ matrix.vers }}
        with:
          package-dir: changeforest-py

      - name: wheels Windows ${{ matrix.vers }}
        if: runner.os == 'Windows'
        uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_ARCHS_WINDOWS: ${{ matrix.vers }}
        with:
          package-dir: changeforest-py

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  python-build-sdist:
    name: Python sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Install build dependencies
        run: python -m pip install numpy maturin
      - name: Build sdist
        run: maturin sdist -m changeforest-py/Cargo.toml

      - uses: actions/upload-artifact@v2
        with:
          path: changeforest-py/target/wheels/*.tar.gz
