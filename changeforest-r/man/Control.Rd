% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/control.R
\name{Control}
\alias{Control}
\title{Storage container for hyperparameters.}
\value{
Object of class Control containing hyperparameters.
}
\description{
Storage container for hyperparameters.

Storage container for hyperparameters.
}
\details{
See rust documentation of changeforest::control::Control,
biosphere::forest::RandomForestParameters and biosphere::tree::DecisionTreeParameters
for more details.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{minimal_relative_segment_length}}{Segments with length smaller than 
\code{2 * n * minimal_relative_segment_length} will not be split. Equal to
0.01 by default.}

\item{\code{minimal_gain_to_split}}{Only keep split point if the gain exceeds
\code{minimal_gain_to_split}. Relevant for change in mean. Use value motivated by BIC
\code{minimal_gain_to_split = log(n_samples) * n_features / n_samples} by default.}

\item{\code{model_selection_alpha}}{Type two error in model selection to be approximated.
Relevant for classifier-based changepoint detection. Equal to 0.02 by default.}

\item{\code{model_selection_n_permutations}}{Number of permutations for model selection in
classifier-based change point detection. Equal to 199 by default.}

\item{\code{number_of_wild_segments}}{Number of randomly drawn segments. Corresponds to
parameter \code{M} in https://arxiv.org/pdf/1411.0858.pdf. Only relevant if
\code{segmentation='wbs'}. Equal to 100 by default.}

\item{\code{seeded_segments_alpha}}{Decay parameter in seeded binary segmentation. Should
be in \code{[1/2, 1)}, with a value close to 1 resulting in many segments. Corresponds to
\eqn{\alpha} in https://arxiv.org/pdf/2002.06633.pdf. Only relevant if
\code{segmentatin='sbs'}. Equal to \eqn{1 / \sqrt{2}} by default.}

\item{\code{seed}}{Seed for segmentation and random forest. Only relevant for
\code{segmentation='wbs'} or \code{method='random_forest'}.}

\item{\code{random_forest_n_estimators}}{Parameter passed to random forest classifier if
\code{method='random_forest'}. Equal to 100 by default.}

\item{\code{random_forest_max_features}}{Parameter passed to random forest classifier if
\code{method='random_forest'}. Equal to \eqn{\sqrt{d}} by default.}

\item{\code{random_forest_max_depth}}{Parameter passed to random forest classifier if
\code{method='random_forest'}. Equal to 8 by default.}

\item{\code{random_forest_n_jobs}}{Parameter passed to random forest classifier if
\code{method='random_forest'}. Use all cores if -1. Equal to -1 by default.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Control$new()}}
\item \href{#method-clone}{\code{Control$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new object of class \code{binary_segmentation_resutl}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Control$new(
  minimal_relative_segment_length = "default",
  minimal_gain_to_split = "default",
  model_selection_alpha = "default",
  model_selection_n_permutations = "default",
  number_of_wild_segments = "default",
  seeded_segments_alpha = "default",
  seed = "default",
  random_forest_n_estimators = "default",
  random_forest_max_features = "default",
  random_forest_max_depth = "default",
  random_forest_n_jobs = "default"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{minimal_relative_segment_length}}{Segments with length smaller than
\code{2 * n * minimal_relative_segment_length} will not be split. Equal to 0.01 by default.}

\item{\code{minimal_gain_to_split}}{Only keep split point if the gain exceeds
\code{minimal_gain_to_split}. Relevant for change in mean. Use value motivated by BIC
\code{minimal_gain_to_split = log(n_samples) * n_features / n_samples} by default.}

\item{\code{model_selection_alpha}}{Type two error in model selection to be approximated.
Relevant for classifier-based changepoint detection. Equal to 0.02 by default.}

\item{\code{model_selection_n_permutations}}{Number of permutations for model selection in
classifier-based change point detection. Equal to 199 by default.}

\item{\code{number_of_wild_segments}}{Number of randomly drawn segments. Corresponds to
parameter \code{M} in https://arxiv.org/pdf/1411.0858.pdf. Only relevant if
\code{segmentation='wbs'}. Equal to 100 by default.}

\item{\code{seeded_segments_alpha}}{Decay parameter in seeded binary segmentation. Should
be in \code{[1/2, 1)}, with a value close to 1 resulting in many segments. Corresponds to
\eqn{\alpha} in https://arxiv.org/pdf/2002.06633.pdf. Only relevant if
\code{segmentatin='sbs'}. Equal to \eqn{1 / \sqrt{2}} by default.}

\item{\code{seed}}{Seed for segmentation and random forest. Only relevant for
\code{segmentation='wbs'} or \code{method='random_forest'}.}

\item{\code{random_forest_n_estimators}}{Parameter passed to random forest classifier if
\code{method='random_forest'}. Equal to 100 by default.}

\item{\code{random_forest_max_features}}{Parameter passed to random forest classifier if
\code{method='random_forest'}. Equal to \eqn{\sqrt{d}} by default.}

\item{\code{random_forest_max_depth}}{Parameter passed to random forest classifier if
\code{method='random_forest'}. Equal to 8 by default.}

\item{\code{random_forest_n_jobs}}{Parameter passed to random forest classifier if
\code{method='random_forest'}. Use all cores if -1. Equal to -1 by default.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new object of class \code{binary_segmentation_resutl}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Control$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
